[{"/Users/Troy/Projects/interactive-comment-section/client/src/index.js":"1","/Users/Troy/Projects/interactive-comment-section/client/src/App.js":"2","/Users/Troy/Projects/interactive-comment-section/client/src/components/Comments.jsx":"3","/Users/Troy/Projects/interactive-comment-section/client/src/components/InputBox.jsx":"4","/Users/Troy/Projects/interactive-comment-section/client/src/Context/DataContent.jsx":"5","/Users/Troy/Projects/interactive-comment-section/client/src/components/DeleteModal.jsx":"6","/Users/Troy/Projects/interactive-comment-section/client/src/components/Comment/Comment.jsx":"7","/Users/Troy/Projects/interactive-comment-section/client/src/components/Comment/CommentBody.jsx":"8"},{"size":254,"mtime":1653313301660,"results":"9","hashOfConfig":"10"},{"size":3551,"mtime":1653417075764,"results":"11","hashOfConfig":"10"},{"size":566,"mtime":1653406166645,"results":"12","hashOfConfig":"10"},{"size":1237,"mtime":1653409465449,"results":"13","hashOfConfig":"10"},{"size":106,"mtime":1653323956922,"results":"14","hashOfConfig":"10"},{"size":1580,"mtime":1653405156746,"results":"15","hashOfConfig":"10"},{"size":3906,"mtime":1653408927048,"results":"16","hashOfConfig":"10"},{"size":973,"mtime":1653409241835,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3xkozn",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/Troy/Projects/interactive-comment-section/client/src/index.js",[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/App.js",["44"],[],"import { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\n\nfunction App() {\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState({\n    isDisplayed: false,\n    id: null,\n  });\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        //Add New Comment\n        setComments((prev) => {\n          return [\n            ...prev,\n            {\n              id: new Date(),\n              content: userInput,\n              createdAt: \"Just Now\",\n              score: 0,\n              user: {\n                image: {\n                  png: currentUser.image.png,\n                  webp: currentUser.image.webp,\n                },\n                username: currentUser.username,\n              },\n              replies: [],\n            },\n          ];\n        });\n      } else {\n        //Add New Reply to Comment\n        setComments((prev) =>\n          prev.map((comment) => {\n            const replies = comment.replies;\n\n            if (comment.id === id) {\n              return {\n                ...comment,\n                replies: [\n                  ...replies,\n                  {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp,\n                      },\n                      username: currentUser.username,\n                    },\n                  },\n                ],\n              };\n            } else {\n              // Add New Reply to Replies of Parent Comment\n              const correctReply = replies.map((reply) => {\n                if (reply.id === id) {\n                  return true;\n                } else {\n                  return false;\n                }\n              });\n\n              if (correctReply.includes(true)) {\n                return {\n                  ...comment,\n                  replies: [\n                    ...replies,\n                    {\n                      id: new Date(),\n                      content: userInput,\n                      createdAt: \"Just Now\",\n                      score: 0,\n                      replyingTo,\n                      user: {\n                        image: {\n                          png: currentUser.image.png,\n                          webp: currentUser.image.webp,\n                        },\n                        username: currentUser.username,\n                      },\n                    },\n                  ],\n                };\n              }\n              return comment;\n            }\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        comments,\n        setComments,\n        currentUser,\n        setDisplayModal,\n        displayModal,\n        addComment,\n      }}\n    >\n      <div className=\"App\">\n        {displayModal.isDisplayed && <DeleteModal />}\n        <div className=\"content\">\n          <Comments />\n          <InputBox />\n        </div>\n      </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/Troy/Projects/interactive-comment-section/client/src/components/Comments.jsx",[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/components/InputBox.jsx",[],[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/Context/DataContent.jsx",[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/components/DeleteModal.jsx",[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/components/Comment/Comment.jsx",[],[],"/Users/Troy/Projects/interactive-comment-section/client/src/components/Comment/CommentBody.jsx",[],[],{"ruleId":"45","severity":1,"message":"46","line":10,"column":23,"nodeType":"47","messageId":"48","endLine":10,"endColumn":37},"no-unused-vars","'setCurrentUser' is assigned a value but never used.","Identifier","unusedVar"]