{"ast":null,"code":"var _jsxFileName = \"/Users/Troy/Projects/interactive-comment-section/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState(false);\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        setComments(prev => {\n          return [...prev, {\n            id: new Date(),\n            content: userInput,\n            createdAt: \"Just Now\",\n            score: 0,\n            user: {\n              image: {\n                png: currentUser.image.png,\n                webp: currentUser.image.webp\n              },\n              username: currentUser.username\n            },\n            replies: []\n          }];\n        });\n      } else {\n        setComments(comments => comments.map(ele => {\n          const replies = ele.replies;\n\n          if (ele.id === id) {\n            return { ...ele,\n              replies: [...replies, {\n                id: new Date(),\n                content: userInput,\n                createdAt: \"Just Now\",\n                score: 0,\n                replyingTo,\n                user: {\n                  image: {\n                    png: currentUser.image.png,\n                    webp: currentUser.image.webp\n                  },\n                  username: currentUser.username\n                }\n              }]\n            };\n          } else {\n            return ele;\n          }\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      comments,\n      setComments,\n      currentUser,\n      setDisplayModal,\n      displayModal,\n      addComment\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [displayModal && /*#__PURE__*/_jsxDEV(DeleteModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"w9PCq12dD7vTmBKFRgiV/MIqVqs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Comments","DeleteModal","InputBox","DataContext","Data","App","comments","setComments","currentUser","setCurrentUser","displayModal","setDisplayModal","addComment","userInput","isReply","id","replyingTo","prev","Date","content","createdAt","score","user","image","png","webp","username","replies","map","ele"],"sources":["/Users/Troy/Projects/interactive-comment-section/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\n\nfunction App() {\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState(false);\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        setComments((prev) => {\n          return [\n            ...prev,\n            {\n              id: new Date(),\n              content: userInput,\n              createdAt: \"Just Now\",\n              score: 0,\n              user: {\n                image: {\n                  png: currentUser.image.png,\n                  webp: currentUser.image.webp,\n                },\n                username: currentUser.username,\n              },\n              replies: [],\n            },\n          ];\n        });\n      } else {\n        setComments((comments) =>\n          comments.map((ele) => {\n            const replies = ele.replies;\n            if (ele.id === id) {\n              return {\n                ...ele,\n                replies: [\n                  ...replies,\n                  {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp,\n                      },\n                      username: currentUser.username,\n                    },\n                  },\n                ],\n              };\n            } else {\n              return ele;\n            }\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        comments,\n        setComments,\n        currentUser,\n        setDisplayModal,\n        displayModal,\n        addComment,\n      }}\n    >\n      <div className=\"App\">\n        {displayModal && <DeleteModal />}\n        <div className=\"content\">\n          <Comments />\n          <InputBox />\n        </div>\n      </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACK,IAAI,CAACE,QAAN,CAAxC;EACA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACK,IAAI,CAACI,WAAN,CAA9C;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;;EAEA,MAAMa,UAAU,GAAG,CAACC,SAAD,EAAYL,WAAZ,EAAyBM,OAAzB,EAAkCC,EAAlC,EAAsCC,UAAtC,KAAqD;IACtE,IAAIH,SAAJ,EAAe;MACb,IAAI,CAACC,OAAL,EAAc;QACZP,WAAW,CAAEU,IAAD,IAAU;UACpB,OAAO,CACL,GAAGA,IADE,EAEL;YACEF,EAAE,EAAE,IAAIG,IAAJ,EADN;YAEEC,OAAO,EAAEN,SAFX;YAGEO,SAAS,EAAE,UAHb;YAIEC,KAAK,EAAE,CAJT;YAKEC,IAAI,EAAE;cACJC,KAAK,EAAE;gBACLC,GAAG,EAAEhB,WAAW,CAACe,KAAZ,CAAkBC,GADlB;gBAELC,IAAI,EAAEjB,WAAW,CAACe,KAAZ,CAAkBE;cAFnB,CADH;cAKJC,QAAQ,EAAElB,WAAW,CAACkB;YALlB,CALR;YAYEC,OAAO,EAAE;UAZX,CAFK,CAAP;QAiBD,CAlBU,CAAX;MAmBD,CApBD,MAoBO;QACLpB,WAAW,CAAED,QAAD,IACVA,QAAQ,CAACsB,GAAT,CAAcC,GAAD,IAAS;UACpB,MAAMF,OAAO,GAAGE,GAAG,CAACF,OAApB;;UACA,IAAIE,GAAG,CAACd,EAAJ,KAAWA,EAAf,EAAmB;YACjB,OAAO,EACL,GAAGc,GADE;cAELF,OAAO,EAAE,CACP,GAAGA,OADI,EAEP;gBACEZ,EAAE,EAAE,IAAIG,IAAJ,EADN;gBAEEC,OAAO,EAAEN,SAFX;gBAGEO,SAAS,EAAE,UAHb;gBAIEC,KAAK,EAAE,CAJT;gBAKEL,UALF;gBAMEM,IAAI,EAAE;kBACJC,KAAK,EAAE;oBACLC,GAAG,EAAEhB,WAAW,CAACe,KAAZ,CAAkBC,GADlB;oBAELC,IAAI,EAAEjB,WAAW,CAACe,KAAZ,CAAkBE;kBAFnB,CADH;kBAKJC,QAAQ,EAAElB,WAAW,CAACkB;gBALlB;cANR,CAFO;YAFJ,CAAP;UAoBD,CArBD,MAqBO;YACL,OAAOG,GAAP;UACD;QACF,CA1BD,CADS,CAAX;MA6BD;IACF;EACF,CAtDD;;EAwDA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLvB,QADK;MAELC,WAFK;MAGLC,WAHK;MAILG,eAJK;MAKLD,YALK;MAMLE;IANK,CADT;IAAA,uBAUE;MAAK,SAAS,EAAC,KAAf;MAAA,WACGF,YAAY,iBAAI,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QADnB,eAEE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAVF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAjFQL,G;;KAAAA,G;AAmFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}