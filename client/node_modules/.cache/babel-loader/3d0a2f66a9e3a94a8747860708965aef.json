{"ast":null,"code":"export const addComment = (userInput, currentUser, isReply, id, replyingTo, setComments) => {\n  if (userInput) {\n    const newComment = {\n      id: new Date(),\n      content: userInput,\n      createdAt: \"Just Now\",\n      score: 0,\n      user: {\n        image: {\n          png: currentUser.image.png,\n          webp: currentUser.image.webp\n        },\n        username: currentUser.username\n      }\n    };\n\n    if (!isReply) {\n      //Add New Comment\n      setComments(prev => {\n        return [...prev, {\n          id: new Date(),\n          content: userInput,\n          createdAt: \"Just Now\",\n          score: 0,\n          user: {\n            image: {\n              png: currentUser.image.png,\n              webp: currentUser.image.webp\n            },\n            username: currentUser.username\n          },\n          replies: []\n        }];\n      });\n    } else {\n      //Add New Reply to Comment\n      setComments(prev => prev.map(comment => {\n        const replies = comment.replies;\n\n        if (comment.id === id) {\n          return { ...comment,\n            replies: [...replies, {\n              id: new Date(),\n              content: userInput,\n              createdAt: \"Just Now\",\n              score: 0,\n              replyingTo,\n              user: {\n                image: {\n                  png: currentUser.image.png,\n                  webp: currentUser.image.webp\n                },\n                username: currentUser.username\n              }\n            }]\n          };\n        } else {\n          // Add New Reply to Replies of Parent Comment\n          const correctReply = replies.map(reply => {\n            if (reply.id === id) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n\n          if (correctReply.includes(true)) {\n            return { ...comment,\n              replies: [...replies, {\n                id: new Date(),\n                content: userInput,\n                createdAt: \"Just Now\",\n                score: 0,\n                replyingTo,\n                user: {\n                  image: {\n                    png: currentUser.image.png,\n                    webp: currentUser.image.webp\n                  },\n                  username: currentUser.username\n                }\n              }]\n            };\n          }\n\n          return comment;\n        }\n      }));\n    }\n  }\n};","map":{"version":3,"names":["addComment","userInput","currentUser","isReply","id","replyingTo","setComments","newComment","Date","content","createdAt","score","user","image","png","webp","username","prev","replies","map","comment","correctReply","reply","includes"],"sources":["/Users/Troy/Projects/interactive-comment-section/client/src/components/functions/addComment.js"],"sourcesContent":["export const addComment = (\n  userInput,\n  currentUser,\n  isReply,\n  id,\n  replyingTo,\n  setComments\n) => {\n  if (userInput) {\n    const newComment = {\n      id: new Date(),\n      content: userInput,\n      createdAt: \"Just Now\",\n      score: 0,\n      user: {\n        image: {\n          png: currentUser.image.png,\n          webp: currentUser.image.webp,\n        },\n        username: currentUser.username,\n      },\n    };\n\n    if (!isReply) {\n      //Add New Comment\n      setComments((prev) => {\n        return [\n          ...prev,\n          {\n            id: new Date(),\n            content: userInput,\n            createdAt: \"Just Now\",\n            score: 0,\n            user: {\n              image: {\n                png: currentUser.image.png,\n                webp: currentUser.image.webp,\n              },\n              username: currentUser.username,\n            },\n            replies: [],\n          },\n        ];\n      });\n    } else {\n      //Add New Reply to Comment\n      setComments((prev) =>\n        prev.map((comment) => {\n          const replies = comment.replies;\n\n          if (comment.id === id) {\n            return {\n              ...comment,\n              replies: [\n                ...replies,\n                {\n                  id: new Date(),\n                  content: userInput,\n                  createdAt: \"Just Now\",\n                  score: 0,\n                  replyingTo,\n                  user: {\n                    image: {\n                      png: currentUser.image.png,\n                      webp: currentUser.image.webp,\n                    },\n                    username: currentUser.username,\n                  },\n                },\n              ],\n            };\n          } else {\n            // Add New Reply to Replies of Parent Comment\n            const correctReply = replies.map((reply) => {\n              if (reply.id === id) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n\n            if (correctReply.includes(true)) {\n              return {\n                ...comment,\n                replies: [\n                  ...replies,\n                  {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp,\n                      },\n                      username: currentUser.username,\n                    },\n                  },\n                ],\n              };\n            }\n            return comment;\n          }\n        })\n      );\n    }\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CACxBC,SADwB,EAExBC,WAFwB,EAGxBC,OAHwB,EAIxBC,EAJwB,EAKxBC,UALwB,EAMxBC,WANwB,KAOrB;EACH,IAAIL,SAAJ,EAAe;IACb,MAAMM,UAAU,GAAG;MACjBH,EAAE,EAAE,IAAII,IAAJ,EADa;MAEjBC,OAAO,EAAER,SAFQ;MAGjBS,SAAS,EAAE,UAHM;MAIjBC,KAAK,EAAE,CAJU;MAKjBC,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,GAAG,EAAEZ,WAAW,CAACW,KAAZ,CAAkBC,GADlB;UAELC,IAAI,EAAEb,WAAW,CAACW,KAAZ,CAAkBE;QAFnB,CADH;QAKJC,QAAQ,EAAEd,WAAW,CAACc;MALlB;IALW,CAAnB;;IAcA,IAAI,CAACb,OAAL,EAAc;MACZ;MACAG,WAAW,CAAEW,IAAD,IAAU;QACpB,OAAO,CACL,GAAGA,IADE,EAEL;UACEb,EAAE,EAAE,IAAII,IAAJ,EADN;UAEEC,OAAO,EAAER,SAFX;UAGES,SAAS,EAAE,UAHb;UAIEC,KAAK,EAAE,CAJT;UAKEC,IAAI,EAAE;YACJC,KAAK,EAAE;cACLC,GAAG,EAAEZ,WAAW,CAACW,KAAZ,CAAkBC,GADlB;cAELC,IAAI,EAAEb,WAAW,CAACW,KAAZ,CAAkBE;YAFnB,CADH;YAKJC,QAAQ,EAAEd,WAAW,CAACc;UALlB,CALR;UAYEE,OAAO,EAAE;QAZX,CAFK,CAAP;MAiBD,CAlBU,CAAX;IAmBD,CArBD,MAqBO;MACL;MACAZ,WAAW,CAAEW,IAAD,IACVA,IAAI,CAACE,GAAL,CAAUC,OAAD,IAAa;QACpB,MAAMF,OAAO,GAAGE,OAAO,CAACF,OAAxB;;QAEA,IAAIE,OAAO,CAAChB,EAAR,KAAeA,EAAnB,EAAuB;UACrB,OAAO,EACL,GAAGgB,OADE;YAELF,OAAO,EAAE,CACP,GAAGA,OADI,EAEP;cACEd,EAAE,EAAE,IAAII,IAAJ,EADN;cAEEC,OAAO,EAAER,SAFX;cAGES,SAAS,EAAE,UAHb;cAIEC,KAAK,EAAE,CAJT;cAKEN,UALF;cAMEO,IAAI,EAAE;gBACJC,KAAK,EAAE;kBACLC,GAAG,EAAEZ,WAAW,CAACW,KAAZ,CAAkBC,GADlB;kBAELC,IAAI,EAAEb,WAAW,CAACW,KAAZ,CAAkBE;gBAFnB,CADH;gBAKJC,QAAQ,EAAEd,WAAW,CAACc;cALlB;YANR,CAFO;UAFJ,CAAP;QAoBD,CArBD,MAqBO;UACL;UACA,MAAMK,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAaG,KAAD,IAAW;YAC1C,IAAIA,KAAK,CAAClB,EAAN,KAAaA,EAAjB,EAAqB;cACnB,OAAO,IAAP;YACD,CAFD,MAEO;cACL,OAAO,KAAP;YACD;UACF,CANoB,CAArB;;UAQA,IAAIiB,YAAY,CAACE,QAAb,CAAsB,IAAtB,CAAJ,EAAiC;YAC/B,OAAO,EACL,GAAGH,OADE;cAELF,OAAO,EAAE,CACP,GAAGA,OADI,EAEP;gBACEd,EAAE,EAAE,IAAII,IAAJ,EADN;gBAEEC,OAAO,EAAER,SAFX;gBAGES,SAAS,EAAE,UAHb;gBAIEC,KAAK,EAAE,CAJT;gBAKEN,UALF;gBAMEO,IAAI,EAAE;kBACJC,KAAK,EAAE;oBACLC,GAAG,EAAEZ,WAAW,CAACW,KAAZ,CAAkBC,GADlB;oBAELC,IAAI,EAAEb,WAAW,CAACW,KAAZ,CAAkBE;kBAFnB,CADH;kBAKJC,QAAQ,EAAEd,WAAW,CAACc;gBALlB;cANR,CAFO;YAFJ,CAAP;UAoBD;;UACD,OAAOI,OAAP;QACD;MACF,CA1DD,CADS,CAAX;IA6DD;EACF;AACF,CA7GM"},"metadata":{},"sourceType":"module"}