{"ast":null,"code":"var _jsxFileName = \"/Users/Troy/Projects/interactive-comment-section/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState({\n    isDisplayed: false,\n    id: null\n  });\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        /*  setComments((prev) => {\n          prev.map((comment) => {\n            if (comment.id === id) {\n              return [\n                ...comment,\n                {\n                  id: new Date(),\n                  content: userInput,\n                  createdAt: \"Just Now\",\n                  score: 0,\n                  user: {\n                    image: {\n                      png: currentUser.image.png,\n                      webp: currentUser.image.webp,\n                    },\n                    username: currentUser.username,\n                  },\n                  replies: [],\n                },\n              ];\n            } else {\n              return comment;\n            }\n          });\n        }) */\n      } else {\n        setComments(prev => prev.map(ele => {\n          const replies = ele.replies;\n\n          if (ele.id === id) {\n            return { ...ele,\n              replies: [...replies, {\n                id: new Date(),\n                content: userInput,\n                createdAt: \"Just Now\",\n                score: 0,\n                replyingTo,\n                user: {\n                  image: {\n                    png: currentUser.image.png,\n                    webp: currentUser.image.webp\n                  },\n                  username: currentUser.username\n                }\n              }]\n            };\n          } else {\n            const correctReply = replies.map(reply => {\n              if (reply.id === id) {\n                return true;\n              } else {\n                return false;\n              }\n            });\n\n            if (correctReply) {\n              return { ...ele,\n                replies: [...replies, {\n                  id: new Date(),\n                  content: userInput,\n                  createdAt: \"Just Now\",\n                  score: 0,\n                  replyingTo,\n                  user: {\n                    image: {\n                      png: currentUser.image.png,\n                      webp: currentUser.image.webp\n                    },\n                    username: currentUser.username\n                  }\n                }]\n              };\n            }\n\n            return ele;\n          }\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      comments,\n      setComments,\n      currentUser,\n      setDisplayModal,\n      displayModal,\n      addComment\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [displayModal.isDisplayed && /*#__PURE__*/_jsxDEV(DeleteModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o1hFltP8RjwHmtvNv02tnGcax4I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Comments","DeleteModal","InputBox","DataContext","Data","App","comments","setComments","currentUser","setCurrentUser","displayModal","setDisplayModal","isDisplayed","id","addComment","userInput","isReply","replyingTo","prev","map","ele","replies","Date","content","createdAt","score","user","image","png","webp","username","correctReply","reply"],"sources":["/Users/Troy/Projects/interactive-comment-section/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\n\nfunction App() {\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState({\n    isDisplayed: false,\n    id: null,\n  });\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        /*  setComments((prev) => {\n          prev.map((comment) => {\n            if (comment.id === id) {\n              return [\n                ...comment,\n                {\n                  id: new Date(),\n                  content: userInput,\n                  createdAt: \"Just Now\",\n                  score: 0,\n                  user: {\n                    image: {\n                      png: currentUser.image.png,\n                      webp: currentUser.image.webp,\n                    },\n                    username: currentUser.username,\n                  },\n                  replies: [],\n                },\n              ];\n            } else {\n              return comment;\n            }\n          });\n        }) */\n      } else {\n        setComments((prev) =>\n          prev.map((ele) => {\n            const replies = ele.replies;\n\n            if (ele.id === id) {\n              return {\n                ...ele,\n                replies: [\n                  ...replies,\n                  {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp,\n                      },\n                      username: currentUser.username,\n                    },\n                  },\n                ],\n              };\n            } else {\n              const correctReply = replies.map((reply) => {\n                if (reply.id === id) {\n                  return true;\n                } else {\n                  return false;\n                }\n              });\n\n              if (correctReply) {\n                return {\n                  ...ele,\n                  replies: [\n                    ...replies,\n                    {\n                      id: new Date(),\n                      content: userInput,\n                      createdAt: \"Just Now\",\n                      score: 0,\n                      replyingTo,\n                      user: {\n                        image: {\n                          png: currentUser.image.png,\n                          webp: currentUser.image.webp,\n                        },\n                        username: currentUser.username,\n                      },\n                    },\n                  ],\n                };\n              }\n              return ele;\n            }\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        comments,\n        setComments,\n        currentUser,\n        setDisplayModal,\n        displayModal,\n        addComment,\n      }}\n    >\n      <div className=\"App\">\n        {displayModal.isDisplayed && <DeleteModal />}\n        <div className=\"content\">\n          <Comments />\n          <InputBox />\n        </div>\n      </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}