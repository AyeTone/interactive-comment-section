{"ast":null,"code":"var _jsxFileName = \"/Users/Troy/Projects/interactive-comment-section/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState({\n    isDisplayed: false,\n    id: null\n  });\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        //Add New Comment\n        setComments(prev => {\n          return [...prev, {\n            id: new Date(),\n            content: userInput,\n            createdAt: \"Just Now\",\n            score: 0,\n            user: {\n              image: {\n                png: currentUser.image.png,\n                webp: currentUser.image.webp\n              },\n              username: currentUser.username\n            },\n            replies: []\n          }];\n        });\n      } else {\n        //Add New Reply\n        setComments(prev => prev.map(comment => {\n          const replies = comment.replies;\n\n          if (comment.id === id) {\n            return { ...comment,\n              replies: [...replies, {\n                id: new Date(),\n                content: userInput,\n                createdAt: \"Just Now\",\n                score: 0,\n                replyingTo,\n                user: {\n                  image: {\n                    png: currentUser.image.png,\n                    webp: currentUser.image.webp\n                  },\n                  username: currentUser.username\n                }\n              }]\n            };\n          } else {\n            const updatedReplies = replies.map(reply => {\n              if (reply.id === id) {\n                return { ...comment,\n                  replies: [...replies, {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp\n                      },\n                      username: currentUser.username\n                    }\n                  }]\n                };\n              } else {\n                return reply;\n              }\n            });\n            return updatedReplies;\n          }\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      comments,\n      setComments,\n      currentUser,\n      setDisplayModal,\n      displayModal,\n      addComment\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [displayModal.isDisplayed && /*#__PURE__*/_jsxDEV(DeleteModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o1hFltP8RjwHmtvNv02tnGcax4I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Comments","DeleteModal","InputBox","DataContext","Data","App","comments","setComments","currentUser","setCurrentUser","displayModal","setDisplayModal","isDisplayed","id","addComment","userInput","isReply","replyingTo","prev","Date","content","createdAt","score","user","image","png","webp","username","replies","map","comment","updatedReplies","reply"],"sources":["/Users/Troy/Projects/interactive-comment-section/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Comments from \"./components/Comments\";\nimport DeleteModal from \"./components/DeleteModal\";\nimport InputBox from \"./components/InputBox\";\nimport DataContext from \"./Context/DataContent\";\nimport Data from \"./data.json\";\n\nfunction App() {\n  const [comments, setComments] = useState(Data.comments);\n  const [currentUser, setCurrentUser] = useState(Data.currentUser);\n  const [displayModal, setDisplayModal] = useState({\n    isDisplayed: false,\n    id: null,\n  });\n\n  const addComment = (userInput, currentUser, isReply, id, replyingTo) => {\n    if (userInput) {\n      if (!isReply) {\n        //Add New Comment\n        setComments((prev) => {\n          return [\n            ...prev,\n            {\n              id: new Date(),\n              content: userInput,\n              createdAt: \"Just Now\",\n              score: 0,\n              user: {\n                image: {\n                  png: currentUser.image.png,\n                  webp: currentUser.image.webp,\n                },\n                username: currentUser.username,\n              },\n              replies: [],\n            },\n          ];\n        });\n      } else {\n        //Add New Reply\n        setComments((prev) =>\n          prev.map((comment) => {\n            const replies = comment.replies;\n\n            if (comment.id === id) {\n              return {\n                ...comment,\n                replies: [\n                  ...replies,\n                  {\n                    id: new Date(),\n                    content: userInput,\n                    createdAt: \"Just Now\",\n                    score: 0,\n                    replyingTo,\n                    user: {\n                      image: {\n                        png: currentUser.image.png,\n                        webp: currentUser.image.webp,\n                      },\n                      username: currentUser.username,\n                    },\n                  },\n                ],\n              };\n            } else {\n              const updatedReplies = replies.map((reply) => {\n                if (reply.id === id) {\n                  return {\n                    ...comment,\n                    replies: [\n                      ...replies,\n                      {\n                        id: new Date(),\n                        content: userInput,\n                        createdAt: \"Just Now\",\n                        score: 0,\n                        replyingTo,\n                        user: {\n                          image: {\n                            png: currentUser.image.png,\n                            webp: currentUser.image.webp,\n                          },\n                          username: currentUser.username,\n                        },\n                      },\n                    ],\n                  };\n                } else {\n                  return reply;\n                }\n              });\n\n              return updatedReplies;\n            }\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <DataContext.Provider\n      value={{\n        comments,\n        setComments,\n        currentUser,\n        setDisplayModal,\n        displayModal,\n        addComment,\n      }}\n    >\n      <div className=\"App\">\n        {displayModal.isDisplayed && <DeleteModal />}\n        <div className=\"content\">\n          <Comments />\n          <InputBox />\n        </div>\n      </div>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}